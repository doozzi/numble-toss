# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: stock-service
  BUCKET_NAME: gangbean-stock-service
  CODE_DEPLOY_APP_NAME: gangbean-stock-service-cicd
  DEPLOYMENT_GROUP_NAME: gangbean-stock-service-cicd-group
  GITHUB_SHA: stock-service-$(date+"%Y-%m-%d-%H:%M:%S")

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: stock_service
          mysql user: xbox2537
          mysql password: xbox2537
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build
      - name: Compress all report files
        if: ${{ failure() }}
        run: |
          echo "Compressing all report files..."
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          mkdir report_files
          REPORT_DIRS=$(find . -type d -path '*/build/reports/tests/test')
          for dir in $REPORT_DIRS; do
            module_path=$(echo $dir | awk -F'/build/' '{print $1}' | cut -c 3-)
            cp -r $dir report_files/$module_path/$(basename $(dirname $dir))
          done
          tar czvf report_files_$TIMESTAMP.tar.gz report_files
      - name: Upload Error Report Files To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: report_files
          path: report_files_*.tar.gz
      - name: Upload Test Report as Artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test_report
          path: /home/runner/work/stock-service/stock-service/build/reports/tests/test
      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip